{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/HighlightedQuote.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/UI/Card.module.css","components/layout/Layout.module.css","hooks/use-http.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","lib/api.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js","components/quotes/HighlightedQuote.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","pages/QuoteDetail.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js","components/layout/MainNavigation.js","components/layout/Layout.js","pages/NotFound.js","App.js","index.js"],"names":["module","exports","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","LoadingSpinner","spinner","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","useEffect","length","HighlightedQuote","NewCommentForm","commentTextRef","useRef","onAddedComment","submitFormHandler","event","preventDefault","enteredText","current","value","form","onSubmit","control","htmlFor","rows","ref","actions","CommentItem","CommentsList","comments","comment","Comments","useState","isAddingComment","setIsAddingComment","loadedComments","useParams","addedCommentHandler","QuoteDetail","match","useRouteMatch","path","exact","url","Card","card","children","QuoteForm","isEntering","setIsEntering","authorInputRef","textInputRef","when","onFocus","enteredAuthor","onAddQuote","isLoading","loading","NewQuote","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","NotFound","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b94220f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__1pNKA\",\"loading\":\"QuoteForm_loading__309kY\",\"control\":\"QuoteForm_control__Clh5s\",\"actions\":\"QuoteForm_actions__KAqNv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__1ydiR\",\"logo\":\"MainNavigation_logo__3EELd\",\"nav\":\"MainNavigation_nav__3DbZ6\",\"active\":\"MainNavigation_active__3VjSd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__1nHZN\",\"loading\":\"NewCommentForm_loading__3purm\",\"control\":\"NewCommentForm_control__1Dqno\",\"actions\":\"NewCommentForm_actions__afCnK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3wWSP\",\"sorting\":\"QuoteList_sorting__Fduy9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__1fYFN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__1I_gz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__1Sn83\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__2GgHq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__13g1d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__sZJwK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__kJaQ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1OEN8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__a7yjQ\"};","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","import { Link } from \"react-router-dom\";\n\nimport classes from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className=\"btn\" to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortingAscending ? \"desc\" : \"asc\"}`,\n    });\n    // or\n    // history.push(\n    //   `${location.pathname}?sort=${isSortingAscending ? \"desc\" : \"asc\"}`\n    // );\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Decending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","const FIREBASE_DOMAIN = \"https://redux-prac-881dc-default-rtdb.firebaseio.com\";\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quotes.\");\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quote.\");\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: \"POST\",\n    body: JSON.stringify(quoteData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not create quote.\");\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(\n    `${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\n    {\n      method: \"POST\",\n      body: JSON.stringify(requestData.commentData),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not add comment.\");\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not get comments.\");\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { Link } from \"react-router-dom\";\n\nimport classes from \"./NoQuotesFound.module.css\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className=\"btn\" to=\"/new-quote\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from \"react\";\n\nimport useHttp from \"../hooks/use-http\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport { getAllQuotes } from \"../lib/api\"; //get all quotes and transform them into these array;\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\n\nconst AllQuotes = () => {\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error,\n  } = useHttp(getAllQuotes, true);\n\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered focused\">{error}</p>;\n  }\n\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return <NoQuotesFound />;\n  }\n\n  return <QuoteList quotes={loadedQuotes} />;\n};\n\nexport default AllQuotes;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useRef, useEffect } from \"react\";\n\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const commentTextRef = useRef();\n\n  //we EXPECT THIS Function from out props so we destructure it\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n    // optional: Could validate here\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  // here we use it because we know this comments component will always be in the same place\n  const params = useParams();\n  const { quoteId } = params;\n\n  // to fectch comments every time quoteId changes\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  //if we don't use useCallback this function will be re recreated whenever the parent component rerenders which will create an infinite loop\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No Comments Were Added Yet</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import { Fragment, useEffect } from \"react\";\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\n\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport Comments from \"../components/comments/Comments\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\nconst QuoteDetail = () => {\n  const match = useRouteMatch();\n  const params = useParams();\n\n  // getSingleQuote wants the quote id so we destructure it with the help of useParams\n  const { quoteId } = params;\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  // const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n\n  if (!loadedQuote.text) {\n    return <p>No quote found!</p>;\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocusedHandler = () => {\n    setIsEntering(true);\n  };\n\n  const finishedEntering = () => {\n    setIsEntering(false);\n  };\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntering}\n        message={(location) =>\n          \"Are you sure you want to leave, All your entered data will be lost.\"\n        }\n      />\n      <Card>\n        <form\n          onFocus={formFocusedHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishedEntering} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport QuoteForm from \"../components/quotes/QuoteForm\";\nimport useHttp from \"../hooks/use-http\";\nimport { addQuote } from \"../lib/api\";\n\nconst NewQuote = () => {\n  const { sendRequest, status } = useHttp(addQuote);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (status === \"completed\") {\n      history.push(\"/quotes\");\n    }\n  }, [status, history]);\n\n  const addQuoteHandler = (quoteData) => {\n    // console.log(quoteData);\n    sendRequest(quoteData);\n\n    history.push(\"/quotes\");\n  };\n\n  return (\n    <QuoteForm isLoading={status === \"pending\"} onAddQuote={addQuoteHandler} />\n  );\n};\n\nexport default NewQuote;\n","import { NavLink } from 'react-router-dom';\n\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n  return (\n    <header className={classes.header}>\n      <div className={classes.logo}>Great Quotes</div>\n      <nav className={classes.nav}>\n        <ul>\n          <li>\n            <NavLink to='/quotes' activeClassName={classes.active}>\n              All Quotes\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to='/new-quote' activeClassName={classes.active}>\n              Add a Quote\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport classes from './Layout.module.css';\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main className={classes.main}>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"centered\">\r\n      <p>Page not found</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport AllQuotes from \"./pages/AllQuotes\";\nimport QuoteDetail from \"./pages/QuoteDetail\";\nimport NewQuote from \"./pages/NewQuote\";\nimport Layout from \"./components/layout/Layout\";\nimport NotFound from \"./pages/NotFound\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/quotes\" />\n        </Route>\n        <Route path=\"/quotes\" exact>\n          <AllQuotes />\n        </Route>\n        <Route path=\"/quotes/:quoteId\">\n          <QuoteDetail />\n        </Route>\n        <Route path=\"/new-quote\">\n          <NewQuote />\n        </Route>\n        <Route path=\"*\">\n          <NotFound />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}